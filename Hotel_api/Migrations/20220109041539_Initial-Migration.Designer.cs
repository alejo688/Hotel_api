// <auto-generated />
using System;
using Hotel_api.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Hotel_api.Migrations
{
    [DbContext(typeof(ApiDbContext))]
    [Migration("20220109041539_Initial-Migration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Hotel_api.Model.HabitacionModel", b =>
                {
                    b.Property<int>("Id_Habitacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<int>("Id_Hotel")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id_Habitacion");

                    b.HasIndex("Id_Hotel");

                    b.ToTable("Habitaciones");

                    b.HasData(
                        new
                        {
                            Id_Habitacion = 1,
                            Descripcion = "Habitación sencilla",
                            Estado = true,
                            Id_Hotel = 1,
                            Nombre = "Habitación 101"
                        },
                        new
                        {
                            Id_Habitacion = 2,
                            Descripcion = "Habitación sencilla",
                            Estado = true,
                            Id_Hotel = 1,
                            Nombre = "Habitación 102"
                        },
                        new
                        {
                            Id_Habitacion = 3,
                            Descripcion = "Habitación doble",
                            Estado = true,
                            Id_Hotel = 1,
                            Nombre = "Habitación 201"
                        },
                        new
                        {
                            Id_Habitacion = 4,
                            Descripcion = "Habitación doble",
                            Estado = true,
                            Id_Hotel = 1,
                            Nombre = "Habitación 202"
                        },
                        new
                        {
                            Id_Habitacion = 5,
                            Descripcion = "Habitación vip",
                            Estado = true,
                            Id_Hotel = 1,
                            Nombre = "Habitación 301"
                        },
                        new
                        {
                            Id_Habitacion = 6,
                            Descripcion = "Habitación sencilla",
                            Estado = true,
                            Id_Hotel = 2,
                            Nombre = "Habitación 101"
                        },
                        new
                        {
                            Id_Habitacion = 7,
                            Descripcion = "Habitación sencilla",
                            Estado = true,
                            Id_Hotel = 2,
                            Nombre = "Habitación 102"
                        },
                        new
                        {
                            Id_Habitacion = 8,
                            Descripcion = "Habitación doble",
                            Estado = true,
                            Id_Hotel = 2,
                            Nombre = "Habitación 201"
                        },
                        new
                        {
                            Id_Habitacion = 9,
                            Descripcion = "Habitación doble",
                            Estado = true,
                            Id_Hotel = 2,
                            Nombre = "Habitación 202"
                        },
                        new
                        {
                            Id_Habitacion = 10,
                            Descripcion = "Habitación vip",
                            Estado = true,
                            Id_Hotel = 2,
                            Nombre = "Habitación 301"
                        });
                });

            modelBuilder.Entity("Hotel_api.Model.HotelModel", b =>
                {
                    b.Property<int>("Id_Hotel")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Cantidad_Habitaciones")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<string>("Latitud")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Longitud")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Pais")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id_Hotel");

                    b.ToTable("Hoteles");

                    b.HasData(
                        new
                        {
                            Id_Hotel = 1,
                            Cantidad_Habitaciones = 5,
                            Descripcion = "Hermoso hotel ubicado en la ciudad de bogotá",
                            Estado = true,
                            Latitud = "4.640845",
                            Longitud = "-74.098481",
                            Nombre = "Hotel Bogotá",
                            Pais = "Colombia"
                        },
                        new
                        {
                            Id_Hotel = 2,
                            Cantidad_Habitaciones = 5,
                            Descripcion = "Hermoso hotel ubicado en la ciudad de madrid",
                            Estado = true,
                            Latitud = "40.405885",
                            Longitud = "-3.674803",
                            Nombre = "Hotel Madrid",
                            Pais = "España"
                        });
                });

            modelBuilder.Entity("Hotel_api.Model.ReservaModel", b =>
                {
                    b.Property<int>("Id_Reserva")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Fecha_Entrada")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("Fecha_Reserva")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("getdate()");

                    b.Property<DateTime>("Fecha_Salida")
                        .HasColumnType("datetime");

                    b.Property<int>("Id_Habitacion")
                        .HasColumnType("int");

                    b.Property<int>("Id_Usuario")
                        .HasColumnType("int");

                    b.HasKey("Id_Reserva");

                    b.HasIndex("Id_Habitacion");

                    b.HasIndex("Id_Usuario");

                    b.ToTable("Reservas");

                    b.HasData(
                        new
                        {
                            Id_Reserva = 1,
                            Estado = true,
                            Fecha_Entrada = new DateTime(2022, 1, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Fecha_Reserva = new DateTime(2021, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Fecha_Salida = new DateTime(2022, 1, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Id_Habitacion = 1,
                            Id_Usuario = 1
                        },
                        new
                        {
                            Id_Reserva = 2,
                            Estado = true,
                            Fecha_Entrada = new DateTime(2022, 1, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Fecha_Reserva = new DateTime(2021, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Fecha_Salida = new DateTime(2022, 1, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Id_Habitacion = 10,
                            Id_Usuario = 5
                        });
                });

            modelBuilder.Entity("Hotel_api.Model.UsuarioModel", b =>
                {
                    b.Property<int>("Id_Usuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Apellidos")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Mail")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Nombres")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id_Usuario");

                    b.ToTable("Usuarios");

                    b.HasData(
                        new
                        {
                            Id_Usuario = 1,
                            Apellidos = "Perez",
                            Direccion = "Calle 123",
                            Mail = "luis.perez@tudominio.com",
                            Nombres = "Luis"
                        },
                        new
                        {
                            Id_Usuario = 2,
                            Apellidos = "Perez",
                            Direccion = "Calle 456",
                            Mail = "juan.perez@tudominio.com",
                            Nombres = "Juan"
                        },
                        new
                        {
                            Id_Usuario = 3,
                            Apellidos = "Perez",
                            Direccion = "Calle 789",
                            Mail = "maria.perez@tudominio.com",
                            Nombres = "Maria"
                        },
                        new
                        {
                            Id_Usuario = 4,
                            Apellidos = "Perez",
                            Direccion = "Calle 987",
                            Mail = "monica.perez@tudominio.com",
                            Nombres = "Monica"
                        },
                        new
                        {
                            Id_Usuario = 5,
                            Apellidos = "Perez",
                            Direccion = "Calle 654",
                            Mail = "luisa.perez@tudominio.com",
                            Nombres = "Luisa"
                        },
                        new
                        {
                            Id_Usuario = 6,
                            Apellidos = "Perez",
                            Direccion = "Calle 321",
                            Mail = "pedro.perez@tudominio.com",
                            Nombres = "Pedro"
                        });
                });

            modelBuilder.Entity("Hotel_api.Model.HabitacionModel", b =>
                {
                    b.HasOne("Hotel_api.Model.HotelModel", "HotelModel")
                        .WithMany("Habitaciones")
                        .HasForeignKey("Id_Hotel")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HotelModel");
                });

            modelBuilder.Entity("Hotel_api.Model.ReservaModel", b =>
                {
                    b.HasOne("Hotel_api.Model.HabitacionModel", "HabitacionModel")
                        .WithMany("Reservas")
                        .HasForeignKey("Id_Habitacion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hotel_api.Model.UsuarioModel", "UsuarioModel")
                        .WithMany("Reservas")
                        .HasForeignKey("Id_Usuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HabitacionModel");

                    b.Navigation("UsuarioModel");
                });

            modelBuilder.Entity("Hotel_api.Model.HabitacionModel", b =>
                {
                    b.Navigation("Reservas");
                });

            modelBuilder.Entity("Hotel_api.Model.HotelModel", b =>
                {
                    b.Navigation("Habitaciones");
                });

            modelBuilder.Entity("Hotel_api.Model.UsuarioModel", b =>
                {
                    b.Navigation("Reservas");
                });
#pragma warning restore 612, 618
        }
    }
}
